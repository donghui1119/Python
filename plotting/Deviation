#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Tue Aug  4 20:47:07 2020

@author: donghui
"""


import os
import math
import numpy as np
import pandas as pd
import matplotlib as mpl
import matplotlib.pyplot as plt
import matplotlib.patches as patches
import matplotlib.lines as lines
import seaborn as sns
import warnings; warnings.filterwarnings(action='once')

from scipy.spatial import ConvexHull

df = pd.read_csv("/home/donghui/test/mtcars.csv")

plt.figure(figsize=(12,10),dpi=80)

sns.heatmap(df.corr(),xticklabels=df.corr().columns,yticklabels=df.corr().columns,cmap='hot',center=0,annot=True)

plt.title('correlogram of mtcars')

plt.xticks(fontsize=12)
plt.yticks(fontsize=12)
plt.show()

x = df.loc[:,['mpg']]
df['mpg_z']=(x-x.mean())/x.std()

df['colors']=['red' if x<0 else 'green' for x in df['mpg_z']]
df.sort_values('mpg_z',inplace=True)
df.reset_index(inplace=True)

plt.figure(figsize=(14,10),dpi=80)
plt.hlines(y=df.index,xmin=0,xmax=df.mpg_z,color=df.colors,
           alpha=0.4,linewidth=5)

plt.gca().set(ylabel="$Model$",xlabel='$Mileage$')
plt.yticks(df.index, df.cars,fontsize=12)
plt.title('deverging Barof Car Mileage',fontdict={'size':20})
plt.grid(linestyle='--',alpha=0.5)
plt.show()







x = df.loc[:,['mpg']]
df['mpg_z']=(x-x.mean())/x.std()

df['colors']=['red' if x<0 else 'green' for x in df['mpg_z']]
df.sort_values('mpg_z',inplace=True)
df.reset_index(inplace=True)

plt.figure(figsize=(14,14),dpi=80)
plt.hlines(y=df.index,xmin=0,xmax=df.mpg_z)

for x, y,tex in zip(df.mpg_z,df.index,df.mpg_z):
    t = plt.text(x,y,round(tex,2), horizontalalignment='right' if x<0 else 'left',
                 verticalalignment='center',fontdict={'color':'red' if x<0 else 'green', 'size':14})
    

plt.gca().set(ylabel="$Model$",xlabel='$Mileage$')
plt.yticks(df.index,df.cars,fontsize=12)
plt.title('deverging Text Bar of Car Mileage',fontdict={'size':20})
plt.grid(linestyle='--',alpha=0.5)
plt.xlim(-2.5,2.5)
plt.show()




df = pd.read_csv("/home/donghui/test/mtcars.csv")

plt.figure(figsize=(12,10),dpi=80)


x = df.loc[:,['mpg']]
df['mpg_z']=(x-x.mean())/x.std()

df['colors']=['red' if x<0 else 'green' for x in df['mpg_z']]
df.sort_values('mpg_z',inplace=True)
df.reset_index(inplace=True)

plt.figure(figsize=(14,16),dpi=80)
plt.scatter(df.mpg_z,df.index, s=450, alpha=.6, color=df.colors)

for x,y,tex in zip(df.mpg_z,df.index, df.mpg_z):
    t = plt.text(x,y,round(tex,1),horizontalalignment='center',
                 verticalalignment='center',fontdict={'color':'white'})
    
    
plt.gca().spines["top"].set_alpha(.3)
plt.gca().spines["bottom"].set_alpha(.3)
plt.gca().spines["right"].set_alpha(.3)
plt.gca().spines["left"].set_alpha(.3)

plt.yticks(df.index,df.cars)
plt.title('Diverging dotplot of car mileage', fontdict={'size':20})
plt.xlabel('$Mileages$')
plt.grid(linestyle='--',alpha=0.5)
plt.xlim(-2.5,2.5)
plt.show()




df = pd.read_csv("/home/donghui/test/mtcars.csv")


x = df.loc[:,['mpg']]
df['mpg_z']=(x-x.mean())/x.std()

df['colors']='black'
df.loc[df.cars == 'Fiat X1-9', 'colors']= 'darkorange'
df.sort_values('mpg_z',inplace=True)
df.reset_index(inplace=True)

import matplotlib.patches as patches

plt.figure(figsize=(14,16),dpi=80)

plt.hlines(y=df.index, xmin=0, xmax=df.mpg_z, color=df.colors, alpha=0.4, linewidth=1)
plt.scatter(df.mpg_z, df.index, color=df.colors,s=[600 if x =='Fiat X1-9' else 300 for x in df.cars], alpha=0.6)
                                              
plt.xticks(fontsize=12)
plt.yticks(df.index,df.cars)


plt.annotate('Mercedes Models',xy=(0.0,11.0),xytext=(1.0,11),xycoords='data',
             fontsize=15, ha='center',va='center',
             bbox=dict(boxstyle='square',fc='firebrick'),
             arrowprops=dict(arrowstyle='-[, widthB=2.0,lengthB=1.5',lw=2.0,color='steelblue'),color='white')

p1=patches.Rectangle((-2.0,-1),width=.3, height=.3, alpha=.2,facecolor='red')
p2=patches.Rectangle((1.5,27),width=.8, height=5,alpha=.2,facecolor='green')
    
    
plt.gca().add_patch(p1)
plt.gca().add_patch(p2)
plt.gca().spines["right"].set_alpha(.3)
plt.gca().spines["left"].set_alpha(.3)

plt.title('Diverging dotplot of car mileage', fontdict={'size':20})

plt.grid(linestyle='--',alpha=0.5)

plt.show()


